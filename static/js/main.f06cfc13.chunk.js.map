{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSortAlphabet","setState","ALPHABET","handleSortByLength","LENGTH","handleReverse","handleReset","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","this","isReset","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAkC,CAChCC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,mBAAqB,WACnB,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,kBAAqB,CACjCF,YADY,EAAGA,gBAfrB,EAoBEO,YAAc,WACZ,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,IAAMQ,EA9DH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNS,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKJ,EAASS,SACZ,OAAOQ,EAAME,cAAcD,GAC7B,KAAKlB,EAASW,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITd,GACFS,EAAaM,UAIfC,QAAQC,IAAInB,EAAUE,GAEfS,EAqCSS,CAAkBvB,EAAiBwB,KAAKtB,OACtD,EAAiCsB,KAAKtB,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZoB,EAAUtB,GAAYE,EAE5B,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYzB,IAAaJ,EAASS,WAEpCqB,QAASL,KAAKlB,mBALhB,iCAUA,wBACEqB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYzB,IAAaJ,EAASW,SAEpCmB,QAASL,KAAKf,mBALhB,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAavB,IAEfwB,QAASL,KAAKb,cALhB,qBAUEc,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASL,KAAKZ,YAHhB,sBAUJ,6BACGC,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA9EpC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f06cfc13.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(({ isReversed }) => ({\n      isReversed: !isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n    const isReset = sortType || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.handleSortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReset) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}