{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","goods","visibleGoods","console","log","getReorderedGoods","this","sort","good1","good2","localeCompare","length","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAb,4MACEC,MAAkC,CAChCC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,aAAe,WACb,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,kBAAqB,CACjCF,YADY,EAAGA,gBAfrB,EAoBEO,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,IAAMQ,EAhDH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNS,EAAY,YAAOD,GAMzB,OAFAE,QAAQC,IAAIb,EAAUE,GAEfS,EAqCSG,CAAkBjB,EAAiBkB,KAAKhB,OACtD,EAAiCgB,KAAKhB,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAiBlB,OAfAQ,EAAMM,MAAK,SAACC,EAAOC,GACjB,OAAQlB,GACN,KAAKJ,EAASS,SACZ,OAAOY,EAAMjB,GAAUmB,cAAcD,EAAMlB,IAC7C,KAAKJ,EAASW,OACZ,OAAOU,EAAMjB,GAAUoB,OAASF,EAAMlB,GAAUoB,OAClD,QACE,OAAO,MAITlB,GACFQ,EAAMF,UAIN,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYvB,IAAaJ,EAASS,WAEpCmB,QAAST,KAAKZ,aALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYvB,IAAaJ,EAASW,SAEpCiB,QAAST,KAAKT,aALhB,4BAUA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAarB,IAEfsB,QAAST,KAAKP,QALhB,sBAUER,GAAYE,IACZ,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAAST,KAAKN,MAHhB,sBAUJ,6BACGC,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA5FpC,GAAyBC,IAAMC,WC/C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.09d46364.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(({ isReversed }) => ({\n      isReversed: !isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n\n    goods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1[sortType].localeCompare(good2[sortType]);\n        case SortType.LENGTH:\n          return good1[sortType].length - good2[sortType].length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}